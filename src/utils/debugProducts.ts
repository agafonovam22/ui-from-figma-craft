import { bitrixApi } from '../services/bitrixApi';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –≤—ã–≤–æ–¥–∞ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
export const debugSpecificProducts = async () => {
  try {
    const products = await bitrixApi.getProducts();
    console.log('üîç –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', products.length);

    const targetProducts = [
      'CardioPower T50',
      'CardioPower TR150', 
      'CardioPower PRO CT400',
      'TRUE'  // –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö (24/7)
    ];

    targetProducts.forEach(searchTerm => {
      const foundProducts = products.filter(product => 
        product.name.includes(searchTerm)
      );

      console.log(`\nüîç === –¢–æ–≤–∞—Ä—ã —Å "${searchTerm}" ===`);
      foundProducts.forEach(product => {
        console.log(`üì¶ ID: ${product.id} | –ù–∞–∑–≤–∞–Ω–∏–µ: ${product.name}`);
        
        const productAny = product as any;
        if (productAny.characteristics) {
          const usage = productAny.characteristics['–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ'] || '–ù–ï–¢';
          const equipmentType = productAny.characteristics['–¢–∏–ø –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'] || '–ù–ï–¢';
          
          console.log(`   ‚ûú –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${usage}`);
          console.log(`   ‚ûú –¢–∏–ø –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è: ${equipmentType}`);
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
          const keyChars = ['–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ', '–¢–∏–ø –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è', '–ë—Ä–µ–Ω–¥ (id)'];
          keyChars.forEach(key => {
            if (productAny.characteristics[key]) {
              console.log(`   ‚ûú ${key}: ${productAny.characteristics[key]}`);
            }
          });
        }
        console.log('---');
      });
    });

    return products;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
    return [];
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–∑–æ–≤–∞ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
(window as any).debugProducts = debugSpecificProducts;