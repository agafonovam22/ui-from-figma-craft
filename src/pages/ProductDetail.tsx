import React, { useEffect, useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import { ArrowLeft, Heart, Share2, ShoppingCart, Download, Minus, Plus } from 'lucide-react';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import EmailSubscription from '@/components/EmailSubscription';
import { Breadcrumb, BreadcrumbList, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator, BreadcrumbPage } from "@/components/ui/breadcrumb";
import { useCart } from '@/contexts/CartContext';
import ProductGallery from '@/components/ProductGallery';
import { useToast } from '@/hooks/use-toast';
import ReviewDialog from '@/components/ReviewDialog';
import { useQuery } from '@tanstack/react-query';
import { optimizeImageUrl, preloadImage } from '@/utils/imageOptimization';  
import LoadingSpinner from '@/components/LoadingSpinner';

const ProductDetail: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const [quantity, setQuantity] = useState(1);
  const [selectedColor, setSelectedColor] = useState<string>('');
  const [selectedSize, setSelectedSize] = useState<string>('core');
  const [activeTab, setActiveTab] = useState<string>('description');
  const [showReviewModal, setShowReviewModal] = useState(false);
  const [selectedInstallmentPlan, setSelectedInstallmentPlan] = useState<number | null>(null);
  const { addItem } = useCart();
  const { toast } = useToast();

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º React Query –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
  const { data: allProductsData, isLoading, error } = useQuery({
    queryKey: ['all-products'],
    queryFn: async () => {
      console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞...');
      const response = await fetch('https://cp44652.tw1.ru/catalog.php');
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    },
    staleTime: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
    gcTime: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç
  });

  // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä –≤ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const product = allProductsData?.products?.find((p: any) => p.id.toString() === id);

  // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
  useEffect(() => {
    if (product?.gallery_images?.length > 0) {
      const mainImage = product.gallery_images[0];
      preloadImage(optimizeImageUrl(mainImage, 700, 700)).catch(console.warn);
    }
  }, [product]);

  const handleBuyClick = () => {
    if (product) {
      addItem({
        id: product.id,
        name: product.name,
        price: product.price,
        image_url: (product.gallery_images && product.gallery_images.length > 0) ? 
          optimizeImageUrl(product.gallery_images[0], 200, 200) : '/placeholder.svg',
        is_available: product.is_available
      });
      
      toast({
        title: "–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É",
        description: `${product.name} (${quantity} —à—Ç.)`,
      });
    }
  };

  const incrementQuantity = () => setQuantity(prev => prev + 1);
  const decrementQuantity = () => setQuantity(prev => Math.max(1, prev - 1));

  const renderTabContent = () => {
    switch (activeTab) {
      case 'description':
        return (
          <div>
            <h3 className="text-xl font-semibold mb-4">–û–ø–∏—Å–∞–Ω–∏–µ</h3>
            <div className="font-manrope text-muted-foreground leading-relaxed space-y-4">
              <p>
                {product.description || `${product.name} - —ç—Ç–æ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-–Ω–∞–±–æ—Ä –æ—Ç –±—Ä–µ–Ω–¥–∞ CENTR, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è –¥–æ–º–∞—à–Ω–∏—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–∏–Ω–≥–∞.`}
              </p>
              {product.characteristics && (
                <div>
                  <p>
                    –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
                  </p>
                  <ul className="list-disc list-inside space-y-1 ml-4">
                    <li>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–Ω–∏–Ω–≥–∞</li>
                    <li>–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</li>
                    <li>–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ —ç—Ä–≥–æ–Ω–æ–º–∏—á–Ω—ã–π –¥–∏–∑–∞–π–Ω</li>
                    <li>–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Å–±–æ—Ä–∫–∏</li>
                    {product.characteristics['–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –¥–æ–º–∞—à–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ'] && (
                      <li>–ì–∞—Ä–∞–Ω—Ç–∏—è: {product.characteristics['–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –¥–æ–º–∞—à–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ']}</li>
                    )}
                  </ul>
                </div>
              )}
              <p>
                –î–∞–Ω–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å-–Ω–∞–±–æ—Ä –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–º–∞—à–Ω–µ–≥–æ —Å–ø–æ—Ä—Ç–∑–∞–ª–∞ –∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫. 
                –ë–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ–¥—É–º–∞–Ω–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º, –æ–Ω –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–º—Ñ–æ—Ä—Ç –≤–æ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏–π.
              </p>
            </div>
          </div>
        );
      case 'specifications':
        return (
          <div>
            <h3 className="text-xl font-semibold mb-6 font-manrope">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
            <div className="font-manrope space-y-8">
              {product.characteristics ? (
                <>
                  {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
                  <div>
                    <h4 className="text-lg font-semibold mb-4 text-foreground">–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h4>
                    <div className="space-y-3">
                      {[
                        { key: '–¢–∏–ø –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', label: '–¢–∏–ø –ø—Ä–æ–¥—É–∫—Ü–∏–∏' },
                        { key: '–ë—Ä–µ–Ω–¥ (id)', label: '–ë—Ä–µ–Ω–¥' },
                        { key: '–ê—Ä—Ç–∏–∫—É–ª', label: '–ê—Ä—Ç–∏–∫—É–ª' },
                        { key: '–¢–∏–ø –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è', label: '–¢–∏–ø –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è' },
                        { key: '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∞–π—Ç–µ', label: '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∞–π—Ç–µ' },
                        { key: '–ë–∞–∑–æ–≤–∞—è –µ–¥–∏–Ω–∏—Ü–∞', label: '–ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è' },
                        { key: '–ê–∫—Ü–∏—è', label: '–ê–∫—Ü–∏—è' }
                      ].map(({ key, label }) => {
                        const value = product.characteristics[key];
                        if (!value) return null;
                        return (
                          <div key={key} className="grid grid-cols-2 py-2 border-b border-gray-200">
                            <span className="text-gray-600 text-sm">{label}</span>
                            <span className="text-foreground text-sm font-medium text-right">{String(value)}</span>
                          </div>
                        );
                      })}
                    </div>
                  </div>

                  {/* –ì–∞–±–∞—Ä–∏—Ç—ã –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ */}
                  {(product.characteristics['–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –î–ª–∏–Ω–∞, —Å–º'] || 
                    product.characteristics['–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –®–∏—Ä–∏–Ω–∞, —Å–º'] || 
                    product.characteristics['–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –í—ã—Å–æ—Ç–∞, —Å–º'] ||
                    product.characteristics['–î–ª–∏–Ω–∞, —Å–º'] ||
                    product.characteristics['–†–∞–∑–º–µ—Ä, —Å–º']) && (
                    <div>
                      <h4 className="text-lg font-semibold mb-4 text-foreground">–ì–∞–±–∞—Ä–∏—Ç—ã –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏</h4>
                      <div className="space-y-3">
                        {[
                          { key: '–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –î–ª–∏–Ω–∞, —Å–º', label: '–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –î–ª–∏–Ω–∞, —Å–º' },
                          { key: '–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –®–∏—Ä–∏–Ω–∞, —Å–º', label: '–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –®–∏—Ä–∏–Ω–∞, —Å–º' },
                          { key: '–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –í—ã—Å–æ—Ç–∞, —Å–º', label: '–†–∞–∑–º–µ—Ä –≤ —Ä–∞–±–æ—á–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –í—ã—Å–æ—Ç–∞, —Å–º' },
                          { key: '–î–ª–∏–Ω–∞, —Å–º', label: '–î–ª–∏–Ω–∞, —Å–º' },
                          { key: '–†–∞–∑–º–µ—Ä, —Å–º', label: '–†–∞–∑–º–µ—Ä, —Å–º' }
                        ].map(({ key, label }) => {
                          const value = product.characteristics[key];
                          if (!value) return null;
                          return (
                            <div key={key} className="grid grid-cols-2 py-2 border-b border-gray-200">
                              <span className="text-gray-600 text-sm">{label}</span>
                              <span className="text-foreground text-sm font-medium text-right">{String(value)}</span>
                            </div>
                          );
                        })}
                      </div>
                    </div>
                  )}

                  {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ */}
                  <div>
                    <h4 className="text-lg font-semibold mb-4 text-foreground">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h4>
                    <div className="space-y-3">
                      {[
                        { key: '–°—Ç—Ä–∞–Ω–∞ –±—Ä–µ–Ω–¥–∞', label: '–°—Ç—Ä–∞–Ω–∞ –±—Ä–µ–Ω–¥–∞' },
                        { key: '–°—Ç—Ä–∞–Ω–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è', label: '–°—Ç—Ä–∞–Ω–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è' },
                        { key: '–¢–æ—Ä–≥–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', label: '–°–µ—Ä–∏—è' }
                      ].map(({ key, label }) => {
                        const value = product.characteristics[key];
                        if (!value) return null;
                        return (
                          <div key={key} className="grid grid-cols-2 py-2 border-b border-gray-200">
                            <span className="text-gray-600 text-sm">{label}</span>
                            <span className="text-foreground text-sm font-medium text-right">{String(value)}</span>
                          </div>
                        );
                      })}
                    </div>
                  </div>

                  {/* –£–ø–∞–∫–æ–≤–∫–∞ */}
                  {(product.characteristics['–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –î–ª–∏–Ω–∞, —Å–º'] || 
                    product.characteristics['–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –®–∏—Ä–∏–Ω–∞, —Å–º'] || 
                    product.characteristics['–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –í—ã—Å–æ—Ç–∞, —Å–º']) && (
                    <div>
                      <h4 className="text-lg font-semibold mb-4 text-foreground">–£–ø–∞–∫–æ–≤–∫–∞</h4>
                      <div className="space-y-3">
                        {[
                          { key: '–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –î–ª–∏–Ω–∞, —Å–º', label: '–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –î–ª–∏–Ω–∞, —Å–º' },
                          { key: '–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –®–∏—Ä–∏–Ω–∞, —Å–º', label: '–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –®–∏—Ä–∏–Ω–∞, —Å–º' },
                          { key: '–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –í—ã—Å–æ—Ç–∞, —Å–º', label: '–ì–∞–±–∞—Ä–∏—Ç—ã —É–ø–∞–∫–æ–≤–∫–∏ –í—ã—Å–æ—Ç–∞, —Å–º' }
                        ].map(({ key, label }) => {
                          const value = product.characteristics[key];
                          if (!value) return null;
                          return (
                            <div key={key} className="grid grid-cols-2 py-2 border-b border-gray-200">
                              <span className="text-gray-600 text-sm">{label}</span>
                              <span className="text-foreground text-sm font-medium text-right">{String(value)}</span>
                            </div>
                          );
                        })}
                      </div>
                    </div>
                  )}

                  {/* –í–µ—Å */}
                  {(product.characteristics['–í–µ—Å –ë—Ä—É—Ç—Ç–æ, –∫–≥'] || product.characteristics['–í–µ—Å, –∫–≥']) && (
                    <div>
                      <h4 className="text-lg font-semibold mb-4 text-foreground">–í–µ—Å</h4>
                      <div className="space-y-3">
                        {[
                          { key: '–í–µ—Å –ë—Ä—É—Ç—Ç–æ, –∫–≥', label: '–í–µ—Å –ë—Ä—É—Ç—Ç–æ, –∫–≥' },
                          { key: '–í–µ—Å, –∫–≥', label: '–í–µ—Å –ù–µ—Ç—Ç–æ, –∫–≥' }
                        ].map(({ key, label }) => {
                          const value = product.characteristics[key];
                          if (!value) return null;
                          return (
                            <div key={key} className="grid grid-cols-2 py-2 border-b border-gray-200">
                              <span className="text-gray-600 text-sm">{label}</span>
                              <span className="text-foreground text-sm font-medium text-right">{String(value)}</span>
                            </div>
                          );
                        })}
                      </div>
                    </div>
                  )}

                  {/* –ì–∞—Ä–∞–Ω—Ç–∏—è –∏ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è */}
                  <div>
                    <h4 className="text-lg font-semibold mb-4 text-foreground">–ì–∞—Ä–∞–Ω—Ç–∏—è –∏ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h4>
                    <div className="space-y-3">
                      {[
                        { key: '–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –¥–æ–º–∞—à–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ', label: '–ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –¥–æ–º–∞—à–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ' },
                        { key: '–ê—Ä—Ç–∏–∫—É–ª', label: '–ê—Ä—Ç–∏–∫—É–ª' }
                      ].map(({ key, label }) => {
                        const value = product.characteristics[key];
                        if (!value || key === '–ê—Ä—Ç–∏–∫—É–ª') return null; // –ê—Ä—Ç–∏–∫—É–ª —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω –≤—ã—à–µ
                        return (
                          <div key={key} className="grid grid-cols-2 py-2 border-b border-gray-200">
                            <span className="text-gray-600 text-sm">{label}</span>
                            <span className="text-foreground text-sm font-medium text-right">{String(value)}</span>
                          </div>
                        );
                      })}
                      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª –≤ –∫–æ–Ω—Ü–µ */}
                      {product.characteristics['–ê—Ä—Ç–∏–∫—É–ª'] && (
                        <div className="grid grid-cols-2 py-2 border-b border-gray-200">
                          <span className="text-gray-600 text-sm">–ê—Ä—Ç–∏–∫—É–ª</span>
                          <span className="text-foreground text-sm font-medium text-right">{String(product.characteristics['–ê—Ä—Ç–∏–∫—É–ª'])}</span>
                        </div>
                      )}
                    </div>
                  </div>
                </>
              ) : (
                <p className="text-muted-foreground">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              )}
            </div>
          </div>
        );
      case 'reviews':
        return (
          <div>
            <h3 className="text-xl font-semibold mb-6 font-manrope">–û—Ç–∑—ã–≤—ã (10)</h3>
            <div className="font-manrope grid lg:grid-cols-3 gap-8">
              {/* –°–ø–∏—Å–æ–∫ –æ—Ç–∑—ã–≤–æ–≤ */}
              <div className="lg:col-span-2 space-y-6">
                {/* –û—Ç–∑—ã–≤ 1 */}
                <div className="space-y-4">
                  <div className="flex items-start space-x-3">
                    <div className="w-12 h-12 bg-gray-400 rounded-full flex-shrink-0"></div>
                    <div className="flex-grow">
                      <div className="flex items-center justify-between mb-1">
                        <span className="font-medium text-foreground">–ò–º—è –§–∞–º–∏–ª–∏—è</span>
                        <div className="flex text-yellow-400">
                          <span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span>‚òÜ</span>
                        </div>
                      </div>
                      <p className="text-sm text-gray-500 mb-2">–í—á–µ—Ä–∞, 22:01</p>
                      <p className="text-gray-600 text-sm leading-relaxed">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure 
                        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, 
                        sunt in culpa qui officia deserunt mollit anim id est laborum.
                      </p>
                    </div>
                  </div>
                  
                  {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –æ—Ç–∑—ã–≤–µ */}
                  <div className="flex space-x-3 ml-15">
                    <div className="w-20 h-20 bg-gray-200 rounded-lg overflow-hidden">
                      <img 
                        src="/lovable-uploads/f35fe135-ca23-48f8-8490-aa26a337a8f5.png" 
                        alt="–û—Ç–∑—ã–≤ —Ñ–æ—Ç–æ 1" 
                        className="w-full h-full object-cover"
                      />
                    </div>
                    <div className="w-20 h-20 bg-gray-200 rounded-lg overflow-hidden">
                      <img 
                        src="/lovable-uploads/f9620881-afa2-4fc3-81cb-d1956b8a6691.png" 
                        alt="–û—Ç–∑—ã–≤ —Ñ–æ—Ç–æ 2" 
                        className="w-full h-full object-cover"
                      />
                    </div>
                  </div>
                </div>

                {/* –û—Ç–∑—ã–≤ 2 */}
                <div className="space-y-4">
                  <div className="flex items-start space-x-3">
                    <div className="w-12 h-12 bg-gray-400 rounded-full flex-shrink-0"></div>
                    <div className="flex-grow">
                      <div className="flex items-center justify-between mb-1">
                        <span className="font-medium text-foreground">–ò–º—è –§–∞–º–∏–ª–∏—è</span>
                        <div className="flex text-yellow-400">
                          <span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span>‚òÜ</span>
                        </div>
                      </div>
                      <p className="text-sm text-gray-500 mb-2">–í—á–µ—Ä–∞, 22:01</p>
                      <p className="text-gray-600 text-sm leading-relaxed">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. 
                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure 
                        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, 
                        sunt in culpa qui officia deserunt mollit anim id est laborum.
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ë–ª–æ–∫ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ */}
              <div className="space-y-4">
                {/* –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏ - –ø–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
                <div className="bg-white border border-gray-200 rounded-lg p-4">
                  <div className="space-y-3">
                    {[
                      { name: '–ö–∞—á–µ—Å—Ç–≤–æ', rating: 6 },
                      { name: '–¶–µ–Ω–∞', rating: 10 },
                      { name: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å', rating: 4 },
                      { name: '–°–∫–æ—Ä–æ—Å—Ç—å', rating: 8 },
                      { name: '–õ–µ–≥–∫–æ—Å—Ç—å –≤ —Å–±–æ—Ä–∫–µ', rating: 8 }
                    ].map((criterion) => (
                      <div key={criterion.name} className="flex items-center justify-between">
                        <span className="text-sm text-gray-600 font-benzin">{criterion.name}</span>
                        <div className="flex space-x-1">
                          {Array.from({ length: 10 }).map((_, index) => (
                            <div
                              key={index}
                              className={`w-2 h-3 ${
                                index < criterion.rating ? 'bg-red-500' : 'bg-gray-200'
                              }`}
                            />
                          ))}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>

                {/* –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ - —Å–µ—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
                <div className="bg-gray-100 rounded-lg p-4 font-benzin">
                  <div className="mb-4">
                    <span className="text-sm text-gray-500">–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥</span>
                  </div>
                  <div className="flex items-center space-x-4 mb-2">
                    <div className="text-5xl font-bold text-gray-800">4.5</div>
                    <div className="flex text-yellow-400 text-2xl">
                      <span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span className="text-gray-300">‚òÖ</span>
                    </div>
                  </div>
                  <p className="text-gray-500 text-sm">10 –æ—Ü–µ–Ω–æ–∫</p>
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ */}
                <button 
                  onClick={() => setShowReviewModal(true)}
                  className="w-full py-3 border border-red-500 text-red-500 rounded-lg hover:bg-red-50 transition-colors"
                >
                  –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤
                </button>
              </div>
            </div>
          </div>
        );
      default:
        return null;
    }
  };

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–æ–≤–∞—Ä–∞
  useEffect(() => {
    setQuantity(1);
    setSelectedColor('');
    setSelectedSize('core');
    setActiveTab('description');
    setSelectedInstallmentPlan(null);
  }, [id]);

  // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
  useEffect(() => {
    if (product) {
      console.log('üîç –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä –∏–∑ –∫—ç—à–∞:', {
        id: product.id,
        name: product.name,
        image_url: product.image_url,
        gallery_images: product.gallery_images,
        fullProduct: product
      });
    }
  }, [product]);

  if (isLoading) {
    return (
      <div className="min-h-screen bg-background">
        <Header />
        <div className="container mx-auto px-4 py-8">
          <div className="flex flex-col items-center justify-center min-h-[400px]">
            <LoadingSpinner size="lg" />
            <h1 className="text-2xl font-bold mb-2 mt-4">–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä...</h1>
            <p className="text-muted-foreground">ID —Ç–æ–≤–∞—Ä–∞: {id}</p>
          </div>
        </div>
        <Footer />
      </div>
    );
  }

  if (error || !product) {
    return (
      <div className="min-h-screen bg-background">
        <Header />
        <div className="container mx-auto px-4 py-8">
          <div className="text-center">
            <h1 className="text-2xl font-bold mb-4">–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
            <p>–ò—â–µ–º —Ç–æ–≤–∞—Ä —Å ID: {id}</p>
            <p className="text-muted-foreground mb-6">
              {error?.message || '–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö'}
            </p>
            <Link to="/catalog">
              <Button variant="outline">
                <ArrowLeft className="w-4 h-4 mr-2" />
                –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
              </Button>
            </Link>
          </div>
        </div>
        <Footer />
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <main className="container mx-auto px-6 lg:px-12 xl:px-16 py-8">
        {/* Breadcrumbs */}
        <nav className="flex items-center space-x-2 text-sm text-muted-foreground mb-6">
          <Link to="/" className="hover:text-foreground">–ì–ª–∞–≤–Ω–∞—è</Link>
          <span>/</span>
          <Link to="/catalog" className="hover:text-foreground">–ö–∞—Ç–∞–ª–æ–≥</Link>
          <span>/</span>
          <span className="text-foreground">{product.name}</span>
        </nav>

        <div className="grid lg:grid-cols-2 gap-12">
          {/* Product Gallery */}
          <div>
            <ProductGallery
              mainImage={(product.gallery_images && product.gallery_images.length > 0) ? 
                optimizeImageUrl(product.gallery_images[0], 700, 700) : '/placeholder.svg'}
              galleryImages={product.gallery_images?.map((img: string) => 
                optimizeImageUrl(img, 700, 700)) || []}
              productName={product.name}
              badges={[
                ...(product.badge ? [{ text: product.badge, variant: 'destructive' as const }] : []),
                ...(product.characteristics?.['–ê–∫—Ü–∏—è'] ? [{ text: '–ê–ö–¶–ò–Ø', variant: 'destructive' as const }] : []),
                ...(product.is_hit ? [{ text: '–•–ò–¢ –ü–†–û–î–ê–ñ', variant: 'secondary' as const }] : [])
              ]}
            />
          </div>

          {/* Product Info with Gray Background - ends after payment options */}
          <div className="bg-gray-50 -my-8 -mr-6 lg:-mr-12 xl:-mr-16 pr-6 lg:pr-12 xl:pr-16 py-8">
            <div className="p-4 space-y-4">
              {/* Header with badges */}
              <div className="flex justify-end mb-4">
                <div className="flex space-x-2">
                  <div className="bg-green-100 text-green-800 px-4 py-2 rounded-full text-sm font-medium flex items-center">
                    <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                    –í –Ω–∞–ª–∏—á–∏–∏
                  </div>
                  <div className="bg-blue-500 text-white px-6 py-2 rounded-full text-sm font-medium">
                    –ï—Å—Ç—å –≤ —à–æ—É—Ä—É–º–µ
                  </div>
                </div>
              </div>

              {/* Product Title and Rating */}
              <div className="space-y-3">
                <h1 className="text-2xl lg:text-3xl xl:text-4xl font-bold leading-tight"
                    style={{ fontFamily: 'Benzin-Bold' }}>
                  {product.name}
                </h1>

                <div className="flex items-center space-x-4">
                  <div className="flex items-center space-x-1">
                    <div className="flex text-yellow-400">
                      <span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span><span>‚òÖ</span>
                    </div>
                    <span className="text-sm text-muted-foreground ml-2">(8 –æ—Ç–∑—ã–≤–æ–≤)</span>
                  </div>
                  <div className="flex items-center space-x-2">
                    <Heart className="w-5 h-5 text-muted-foreground hover:text-red-500 cursor-pointer" />
                    <Share2 className="w-5 h-5 text-muted-foreground hover:text-blue-500 cursor-pointer" />
                  </div>
                </div>
              </div>

              {/* Price */}
              <div className="space-y-2">
                <div className="flex items-center space-x-3">
                  <span className="text-3xl font-bold text-foreground">{product.price} ‚ÇΩ</span>
                  {product.old_price && (
                    <span className="text-lg text-muted-foreground line-through">{product.old_price} ‚ÇΩ</span>
                  )}
                </div>
                <p className="text-sm text-muted-foreground">–¢–æ–≤–∞—Ä –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏</p>
              </div>

              {/* Action Buttons */}
              <div className="flex items-center space-x-4">
                <div className="flex items-center border border-gray-300 rounded-lg">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={decrementQuantity}
                    className="h-10 w-10 rounded-full p-0 border-2"
                  >
                    <Minus className="w-3 h-3" />
                  </Button>
                  <span className="w-12 text-center text-lg font-medium">{quantity}</span>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={incrementQuantity}
                    className="h-10 w-10 rounded-full p-0 border-2"
                  >
                    <Plus className="w-3 h-3" />
                  </Button>
                </div>
                
                {/* Add to Cart Button */}
                <div className="flex-1">
                  {product.is_available ? (
                    <Button 
                      size="lg" 
                      className="w-full bg-red-600 hover:bg-red-700 text-white h-12 text-sm font-medium rounded-lg"
                      onClick={handleBuyClick}
                    >
                      –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                    </Button>
                  ) : (
                    <Button size="lg" variant="outline" className="w-full h-12">
                      –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ü–µ–Ω—É
                    </Button>
                  )}
                </div>
              </div>

              {/* Delivery and Services Info */}
              <div className="space-y-2 text-xs text-muted-foreground font-manrope">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <img 
                      src="/lovable-uploads/f35fe135-ca23-48f8-8490-aa26a337a8f5.png" 
                      alt="–î–æ—Å—Ç–∞–≤–∫–∞" 
                      className="w-4 h-4 object-contain"
                    />
                    <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
                  </div>
                  <span className="font-medium text-foreground">300 —Ä—É–±. (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ú–ö–ê–î/–ö–ê–î)</span>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <img 
                      src="/lovable-uploads/a6b610bf-00ff-40b0-a771-be9d69ec0a79.png" 
                      alt="–°–±–æ—Ä–∫–∞" 
                      className="w-4 h-4 object-contain"
                    />
                    <span>–°–±–æ—Ä–∫–∞</span>
                  </div>
                  <span>–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ</span>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <img 
                      src="/lovable-uploads/f9620881-afa2-4fc3-81cb-d1956b8a6691.png" 
                      alt="–û–ø–ª–∞—Ç–∞ –¥–ª—è —Ñ–∏–∑.–ª–∏—Ü" 
                      className="w-4 h-4 object-contain"
                    />
                    <span>–û–ø–ª–∞—Ç–∞ –¥–ª—è —Ñ–∏–∑.–ª–∏—Ü</span>
                  </div>
                  <span>–ù–∞–ª–∏—á–Ω—ã–º–∏, –∫–∞—Ä—Ç–æ–π, –±–µ–∑–Ω–∞–ª–∏—á–Ω–∞—è, –æ–Ω–ª–∞–π–Ω, –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É</span>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <img 
                      src="/lovable-uploads/9cf11e84-5092-4583-9ee9-6f319e803b5a.png" 
                      alt="–û–ø–ª–∞—Ç–∞ –¥–ª—è —é—Ä.–ª–∏—Ü" 
                      className="w-4 h-4 object-contain"
                    />
                    <span>–û–ø–ª–∞—Ç–∞ –¥–ª—è —é—Ä.–ª–∏—Ü</span>
                  </div>
                  <span>–ë–µ–∑–Ω–∞–ª–∏—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞, –æ–ø–ª–∞—Ç–∞ –æ–Ω–ª–∞–π–Ω</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Product Tabs - outside gray container */}
        <div className="mt-12">
          {/* Tabs Header with Download Button */}
          <div className="flex justify-between items-center border-b border-gray-200 mb-6">
            <div className="flex space-x-8">
              <button 
                className={`pb-2 font-medium transition-colors ${
                  activeTab === 'description' 
                    ? 'text-red-600 border-b-2 border-red-600' 
                    : 'text-gray-500 hover:text-gray-700'
                }`}
                onClick={() => setActiveTab('description')}
              >
                –û–ø–∏—Å–∞–Ω–∏–µ
              </button>
              <button 
                className={`pb-2 font-medium transition-colors ${
                  activeTab === 'specifications' 
                    ? 'text-red-600 border-b-2 border-red-600' 
                    : 'text-gray-500 hover:text-gray-700'
                }`}
                onClick={() => setActiveTab('specifications')}
              >
                –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
              </button>
              <button 
                className={`pb-2 font-medium transition-colors ${
                  activeTab === 'reviews' 
                    ? 'text-red-600 border-b-2 border-red-600' 
                    : 'text-gray-500 hover:text-gray-700'
                }`}
                onClick={() => setActiveTab('reviews')}
              >
                –û—Ç–∑—ã–≤—ã (10)
              </button>
            </div>
          </div>

          {/* Tab Content */}
          <div className="mb-16">
            {renderTabContent()}
          </div>
        </div>
      </main>

      <Footer />
      <EmailSubscription />

      {/* Review Dialog */}
      <ReviewDialog 
        open={showReviewModal} 
        onOpenChange={setShowReviewModal} 
      />
    </div>
  );
};

export default ProductDetail;
